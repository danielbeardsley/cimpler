#!/usr/bin/env node

var httpTrigger = require('../lib/http-trigger'),
    Git        = require('../lib/git'),
    git        = new Git(process.env.GIT_DIR);

readAll(process.stdin, function(input) {
   var builds = input.split("\n").map(function(line) {
      var parts = line.split(/\s+/);
      return {
         commit: parts[1],
         branch: parts[2].split('/').pop()
      };
   });

   git.remote(function(remote, repoPath) {
      var index = 0;
      // Send them one at a time, serially
      // TODO: support POSTing an array of builds eventually.
      function sendNextBuild() {
         var build = builds[index++];
         build.repo = remote || repoPath;
         // read the port from an env variable to allow override
         // during testing
         console.log("Triggering: " + build.branch);
         httpTrigger.injectBuild(build, {httpPort: process.env.CIMPLER_PORT}, function() {
            if (index < builds.length) {
               process.nextTick(sendNextBuild);
            }
         });
      };
      sendNextBuild();
   });
});

function readAll(stream, callback) {
   stream.resume();
   stream.setEncoding('utf8');

   var data = '';
   stream.on('data', function (chunk) {
      data = data + chunk;
   });

   stream.on('end', function () {
      callback(data);
   });
}
